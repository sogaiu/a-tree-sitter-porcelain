#! /bin/sh

# shellcheck disable=SC2034
this_script_desc="Run tree-sitter dump-languages subcommand"

this_script=$(readlink -f "$0")
this_script_dir=$(dirname "$this_script")
this_script_name=$(basename "$this_script")

# shellcheck source=.common
. "$this_script_dir/.common"

########################################################################

cur_dir=$(pwd)

deprintf "%s: start\n" "$this_script_name"

cd "$ATSP_LANG_ROOT" || exit 1

########################################################################

$ATSP_TS_PATH dump-languages
result=$?

deprintf "* dump-languages returned: %s\n" "$result"

# XXX: check return value?

# XXX: could try to capture above output and analyze
#      to decide what to display below...
cat <<EOF
**********************************************************
** If the above output suggests running the init-config **
** subcommand, carefully consider whether to do so.     **
**                                                      **
** It probably means tree-sitter is looking in the      **
** wrong location for config.json.                      **
**                                                      **
** You might want to set the TREE_SITTER_DIR            **
** environment variable to point at the .tree-sitter    **
** directory in this grammar repository's root          **
** directory and try again.                             **
**********************************************************

If tree-sitter dump-languages shows info about more
than one language, be careful while interpreting output
from tree-sitter subcommands.  The shared object used by
tree-sitter for processing may be different from what you
might be expecting.

If tree-sitter dump-languages shows no languages, then it
may be time to investigate.  It may be a sign that
the tree-sitter cli isn't finding any shared objects or
it hasn't found an appropriate config.json file.

The atsp hack-symlink subcommand might be help too.

EOF

########################################################################

cd "$cur_dir" || exit 1

deprintf "%s: end\n" "$this_script_name"
