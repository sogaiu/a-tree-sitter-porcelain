#! /bin/sh

# shellcheck disable=SC2034
this_script_desc="Start tree-sitter playground"

this_script=$(readlink -f "$0")
this_script_dir=$(dirname "$this_script")
this_script_name=$(basename "$this_script")

# shellcheck source=.common
. "${this_script_dir}/.common"

dep_script="build-wasm"

########################################################################

# XXX: should this be done in other scripts?  may be not

# this is here because it seems that to stop tree-sitter playground a
# user is likely to press control-c.  resuming after doesn't appear to
# happen otherwise.  that might lead to an incorrect current working
# directory.

trap cleanup INT

# XXX: perhaps this could be defined in .common though

cleanup () {
  eprintf "\nLikely trapped Control-C\n"
}

########################################################################

cur_dir=$(pwd)

deprintf "%s: start\n" "$this_script_name"

cd "$ATSP_LANG_ROOT" || exit 1

########################################################################

# this section is all about prerequisites

do_dep=${ATSP_FORCE:-0}

parser_wasm=$("$ATSP_UTIL"/wasm-name)
parser_wasm_path=$ATSP_LANG_ROOT/$parser_wasm

# decide whether to execute dependency script
if [ 1 -eq "$do_dep" ]; then
  deprintf "* Unconditionally executing %s.\n" "$dep_script"
else
  deprintf "* Looking for parser wasm:\n"
  deprintf "    %s\n" "$parser_wasm_path"

  if [ -f "$parser_wasm_path" ]; then
    deprintf "* Found.\n"
  else
    deprintf "* Failed to find.\n"
    do_dep=1
  fi
fi

# executing dependency script if necessary
if [ 1 -eq "$do_dep" ]; then
  deprintf "* Calling %s.\n" "$dep_script"

  "$this_script_dir"/build-wasm
  result=$?

  if [ 0 -eq "$result" ]; then
    deprintf "%s: resume\n" "$this_script_name"
  else
    eprintf "%s: abort\n" "$this_script_name"
    exit 1
  fi
fi

cmd="$ATSP_TS_PATH playground"

deprintf "* Invoking:\n"
deprintf "    %s\n" "$cmd"

eval "$cmd"
result=$?

if [ 0 -ne "$result" ]; then
  eprintf "* Playground aborted: %s.\n" "$result"
  eprintf "%s: abort\n" "$this_script_name"
  exit 1
fi

########################################################################

cd "$cur_dir" || exit 1

deprintf "%s: end\n" "$this_script_name"

